appendChild（）向childNodes末尾添加一个元素，然后返回这个元素
insertBefore（）接受两个参数，要插入的节点和作为参照节点。参照节点为null，和appendChild执行相同的操作，返回插入的
replaceChild（）接受两个参数，要插入的和要替换的。返回替换的节点
removeChild（）接受一个参数，被移除
cloneNode（）接受一个布尔值参数，true为深复制，复制节点和整个节点树，false为浅复制，只复制节点本身。
document对象是window对象下的一个属性，可以作为全局对象来访问。document对象是HTMLDocument的一个实例
document的子节点可以是element,documentType
每个节点都是对象。节点有三个重要的属性。nodeName,nodeType，nodeValue
每个节点的nodeType属性，表明节点的类型
对于元素节点，nodeName中始终是元素的名字，nodeValue值始终是null
每个节点都有childNodes属性，里面保存一个NodeList是一个类数组对象，childNodes[0]=childNodes.item(0)
每个节点都有parentNodes属性，指向父节点，父节点的firstChild和lastChlid指向childNodes列表的第一个节点和最后一个节点
对于元素节点div.nodeName==div.tagName
hasChildNodes()比childNodes.length简单
Node类型：document类型表示文档
document.body/document.documentElement
getElementById（）方法没有找到带有相应ID的元素，返回null
getElementsByTagName()返回一个HTMLCollection对象
NodeList,HTMLCollection
HTMLCollection还有一个namedItem()方法
getElementByName()也会返回一个HTMLCollection
Element对元素标签名，子节点，特性的访问
元素的特性，getAttribute（），setAttribute（），removeAttribute（）。不存在时返回null
setAttribute（）传递两个参数。要设置的特性名和值。特性存在替换现有值
element类型是唯一使用attributes属性的Dom节点类型，
attributes属性包含一个NamedNodeMap。元素的每个特性都由一个attr节点表示，每个节点都保存在NamedNodeMap对象。attributes属性包含一系列节点，每个节点的nodeName就是特性的名称，nodeValue就是特性的值
创建新元素。document.createElement()。参数是要创建的标签名。为新元素添加了ownerDocument属性，然后将新元素用appendChild（）加入到文档中
元素可以有无数个子节点。元素的childNodes属性包含了它所有的子节点。
文本节点Text，可以通关过nodeValue或者data来访问Text节点中包含的文本，两个属性值相同。length属性保存节点中字符的数目
document.createTextNode（）创建新文本节点，接受一个参数，要插入的文本。为其设置ownerDocument属性，如果在父元素中使用normalize（）方法,父元素有两个及以上的文本，会将所有文本节点合并，splitText()将文本分割
DOM节点=>元素节点，文本节点，属性节点
总共有12种节点类型，这些节点类型都继承自一个基类型
DOM1级定义了一个Node接口，该接口将由DOM中所有节点类型实现，Node接口在javascript中是Node类型实现的，javascript所有节点类型都继承自Node类型，所有节点类型都共享相同的基本属性和方法
querySelector（）返回匹配模式的第一个元素，querySelectorAll（）返回nodeList实例
getElementsByClassName（）返回nodeList（）
classList（）属性，有add（），contains（）表示列表中是否存在值，存在返回true，不存在返回false，remove(),toggle()如果列表中有给定的值，删除它，没有添加它
IE4最早为document对象引入readystate属性，包含2个属性，loading加载中，complete加载完成
contains（）传递一个参数，调用contains方法是祖先，contains参数是后代返回true

